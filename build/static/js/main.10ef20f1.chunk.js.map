{"version":3,"sources":["assets/images/bitquery_logo.png","store/modalStore.js","api/api.js","store/queriesStore.js","components/CustomGraphiql.js","utils/useDebounce.js","utils/common.js","components/modal/RegisterForm.js","components/modal/LoginForm.js","components/modal/RegisterWindow.js","components/modal/SaveQueryForm.js","components/modal/ShareQueryForm.js","components/modal/SaveQueryWindow.js","components/TabsComponent.js","components/ProfileComponent.js","components/ControlPanel.js","pages/ChangePassword.js","components/ResetPasswordForm.js","pages/ResetPassword.js","components/QueriesComponent.js","components/GalleryComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","registerIsOpen","loginIsOpen","saveQueryIsOpen","shareQueryIsOpen","closeHandler","toggleRegister","resetLoginIsOpen","toggleLogin","e","preventDefault","toggleSaveQuery","toggleShareQuery","makeObservable","this","observable","action","axios","defaults","withCredentials","credentials","signUp","email","password","post","login","getQuery","url","get","Queries","currentVariables","showGallery","queryJustSaved","currentQuery","query","variables","id","setQuery","params","push","length","updateQuery","index","removeQuery","splice","toggleGallery","setCurrentQuery","setCurrentVariables","saveQuery","a","data","TabsStore","tabs","map","tab","indexOf","currentTab","console","log","response","logQuery","queryParams","computed","account_id","UserStore","user","arguments","name","incID","switchTab","tabID","cQuery","QueriesStore","cVariables","cQueryID","renameCurrentTab","addNewTab","removeTab","event","stopPropagation","setUser","getUser","CustomGraphiql","observer","modalStore","addToast","useToasts","graphiql","useRef","useState","process","fetchURL","setFetchURL","debouncedURL","value","timeout","state","setState","useEffect","handler","setTimeout","clearTimeout","useDebounce","prettify","setPrettify","schema","setSchema","fetcherFunction","graphQLParams","fetch","method","headers","Accept","body","JSON","stringify","key","actual","handleInputURLChange","target","handleCopy","editor","current","getQueryEditor","getValue","copy","handleClickPrettifyButton","currentText","require","parse","prettyText","print","setValue","handleQuery","result","error","handleSaveQuery","func","appearance","fetcher","clone","json","then","errors","message","catch","text","editQueryHandler","handleSubject","getIntrospectionQuery","operationName","buildClientSchema","fetchSchema","i","className","ref","style","height","editorTheme","onEditQuery","onEditVariables","Toolbar","Button","onClick","label","title","type","onChange","generateLink","characters","charactersLength","charAt","Math","floor","random","validEmail","test","RegisterForm","active","setEmail","setPassword","register","LoginForm","resend","setResend","logIn","resendActivationLink","onSubmit","to","customStyles","overlay","position","zIndex","top","left","right","bottom","backgroundColor","content","marginRight","transform","overflow","display","flexDirection","maxHeight","minWidth","width","backgroundClip","border","borderRadius","outline","Modal","setAppElement","RegisterWindow","isOpen","onRequestClose","contentLabel","SaveQueryForm","setName","description","setDescription","saveHandler","status","msg","ShareQueryForm","queryLink","setQueryLink","window","location","protocol","host","shareHandler","SaveQueryWindow","TabsComponent","queryurl","useParams","updateTabs","onContextMenu","getQueryUrl","Profile","ModalStore","showProfileMenu","setShowProfileMenu","logOut","prev","src","alt","onClickOutside","classList","ControlPanel","ProfileComponent","ChangePassword","oldPwd","setOldPwd","newPwd","setNewPwd","confirmNewPwd","setConfirmNewPwd","history","useHistory","changePwd","alignItems","ResetPasswordForm","confirmPassword","setConfirmPassword","token","resetPassword","ResetPassword","match","useRouteMatch","sendPasswordResetLink","path","QueriesComponent","queries","hoverElementIndex","setHoverElementIndex","onMouseEnter","onMouseLeave","handleClick","GalleryComponent","allQueries","setAllQueries","myQueries","setMyQueries","showAllQueries","toggleQueries","getQueries","getMyQueries","htmlFor","App","Boolean","hostname","document","getElementById","getAttribute","baseURL","ReactDOM","render","autoDismiss","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.10ef20f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bitquery_logo.b137d64f.png\";","import { makeObservable, observable, action } from \"mobx\"\r\n\r\nclass Modal {\r\n\tregisterIsOpen = false\r\n\tloginIsOpen = false\r\n\tsaveQueryIsOpen = false\r\n\tshareQueryIsOpen = false\r\n\t\r\n\tconstructor() {\r\n\t\tmakeObservable(this, {\r\n\t\t\tregisterIsOpen: observable,\r\n\t\t\tsaveQueryIsOpen: observable,\r\n\t\t\tshareQueryIsOpen: observable,\r\n\t\t\tloginIsOpen: observable,\r\n\t\t\tcloseHandler: action,\r\n\t\t\tresetLoginIsOpen: action,\r\n\t\t\ttoggleLogin: action,\r\n\t\t\ttoggleRegister: action,\r\n\t\t\ttoggleSaveQuery: action,\r\n\t\t\ttoggleShareQuery: action\r\n\t\t})\r\n\t}\r\n\r\n\tcloseHandler = () => {\r\n\t\tthis.toggleRegister()\r\n\t\tthis.resetLoginIsOpen()\r\n\t}\r\n\tresetLoginIsOpen = () => {\r\n\t\tthis.loginIsOpen = false\r\n\t}\r\n\ttoggleLogin = (e) => {\r\n\t\tif (e) e.preventDefault()\r\n\t\tthis.loginIsOpen = !this.loginIsOpen\r\n\t}\r\n\ttoggleRegister = () => {\r\n\t\tthis.registerIsOpen = !this.registerIsOpen\r\n\t}\r\n\ttoggleSaveQuery = () => {\r\n\t\tthis.saveQueryIsOpen = !this.saveQueryIsOpen\r\n\t}\r\n\ttoggleShareQuery = () => {\r\n\t\tthis.shareQueryIsOpen = !this.shareQueryIsOpen\r\n\t}\r\n}\r\n\r\nexport default new Modal()\r\n","import axios from 'axios'\r\naxios.defaults.withCredentials = true\r\naxios.defaults.credentials = 'include'\r\n\r\nexport const signUp = (email, password) => \r\n\taxios.post('/api/signup', {\r\n\t\temail,\r\n\t\tpassword\r\n\t})\r\n\r\nexport const login = (email, password) => \r\n\taxios.post('/api/login', {\r\n\t\temail,\r\n\t\tpassword\r\n\t})\r\n\r\nexport const logout = () => axios.get('/api/logout')\r\n\r\nexport const getUser = () => axios.get('/api/user')\r\n\r\nexport const getQuery = url => axios.get(`/api/getquery/${url}`)\r\n","import { makeObservable, observable, action, computed } from \"mobx\"\r\nimport axios from 'axios'\r\nimport { getUser } from \"../api/api\"\r\n\r\nclass User {\r\n\tuser = null\r\n\r\n\tconstructor() {\r\n\t\tmakeObservable(this, {\r\n\t\t\tuser: observable,\r\n\t\t\tgetUser: action,\r\n\t\t\tsetUser: action\r\n\t\t})\r\n\t}\r\n\r\n\tsetUser = user => {\r\n\t\tthis.user = user\r\n\t}\r\n\r\n\tgetUser = async () => {\r\n\t\ttry {\r\n\t\t\tconst { data } = await getUser()\r\n\t\t\tthis.setUser(data.user[0])\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error.response.data)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass Queries {\r\n\tcurrentVariables = ''\r\n\tshowGallery = true\r\n\tqueryJustSaved = false\r\n\tcurrentQuery = {\r\n\t\tquery: '',\r\n\t\tvariables: '{}',\r\n\t\tid: null\r\n\t}\r\n\tquery = [{\r\n\t\tquery: '',\r\n\t\tvariables: '{}',\r\n\t\tid: null\r\n\t}]\r\n\t\r\n\tconstructor() {\r\n\t\tmakeObservable(this, {\r\n\t\t\tcurrentVariables: observable,\r\n\t\t\tqueryJustSaved: observable,\r\n\t\t\tcurrentQuery: observable,\r\n\t\t\tshowGallery: observable,\r\n\t\t\tquery: observable,\r\n\t\t\tqueryParams: computed,\r\n\t\t\tsetCurrentVariables: action,\r\n\t\t\tsetCurrentQuery: action,\r\n\t\t\ttoggleGallery: action,\r\n\t\t\tupdateQuery: action,\r\n\t\t\tremoveQuery: action,\r\n\t\t\tsaveQuery: action,\r\n\t\t\tsetQuery: action\r\n\t\t})\r\n\t}\r\n\tget queryParams() {\r\n\t\treturn {\r\n\t\t\tid: this.currentQuery.id,\r\n\t\t\taccount_id: UserStore.user && UserStore.user.id || null,\r\n\t\t\tquery: this.currentQuery.query,\r\n\t\t\targuments: this.currentQuery.variables\r\n\t\t}\r\n\t}\r\n\r\n\tsetQuery = (params, id) => {\r\n\t\tthis.query.push({ id: id ? id : null })\r\n\t\tif (params.query) this.query[this.query.length-1].query = params.query\r\n\t\tif (params.url) this.query[this.query.length-1].url = params.url\r\n\t\tthis.query[this.query.length-1].variables = params.variables ? params.variables : '{}'\r\n\t}\r\n\tupdateQuery = (params, index, id) => {\r\n\t\tif (params.query) this.query[index].query = params.query\r\n\t\tif (params.variables) this.query[index].variables = params.variables\r\n\t\tif (params.url) this.query[index].url = params.url\r\n\t\tthis.query[index].id = id ? id : null\r\n\t}\r\n\tremoveQuery = index => {\r\n\t\tthis.query.length!==1 ? this.query.splice(index, 1) : this.query.splice(index, 1, {\r\n\t\t\tquery: '{}',\r\n\t\t\tid: null\r\n\t\t})\r\n\t}\r\n\ttoggleGallery = () => {\r\n\t\tthis.showGallery = !this.showGallery\r\n\t}\r\n\tsetCurrentQuery = (params, id) => {\r\n\t\tif (params.query) this.currentQuery.query = params.query\r\n\t\tif (params.variables) this.currentQuery.variables = params.variables\r\n\t\tthis.currentQuery.id = id ? id : null\r\n\t}\r\n\tsetCurrentVariables = variables => {\r\n\t\tthis.currentVariables = variables\r\n\t}\r\n\tsaveQuery = async params => {\r\n\t\ttry {\r\n\t\t\tconst { data } = await axios.post('/api/addquery', { \r\n\t\t\t\tparams\r\n\t\t\t})\r\n\t\t\tlet id = TabsStore.tabs.map(tab => tab.id).indexOf(TabsStore.currentTab)\r\n\t\t\tthis.updateQuery(params, id, data.id)\r\n\t\t\tthis.setCurrentQuery(params, data.id)\r\n\t\t\tconsole.log(data)\r\n\t\t\tthis.queryJustSaved = !this.queryJustSaved\r\n\t\t\treturn data\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e.response)\r\n\t\t\treturn e.response\r\n\t\t}\r\n\t}\r\n\tlogQuery = async params => {\r\n\t\ttry {\r\n\t\t\tconst { data } = await axios.post('/api/addquerylog', { \r\n\t\t\t\tparams\r\n\t\t\t})\r\n\t\t\tconsole.log(data)\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e)\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nclass Tabs {\r\n\tid = 0\r\n\ttabs = [\r\n\t\t{\r\n\t\t\tname: 'New Tab',\r\n\t\t\tid: this.id\r\n\t\t}\r\n\t]\r\n\tcurrentTab = 0\r\n\r\n\tconstructor() {\r\n\t\tmakeObservable(this, {\r\n\t\t\ttabs: observable,\r\n\t\t\tid: observable,\r\n\t\t\tcurrentTab: observable,\r\n\t\t\tswitchTab: action,\r\n\t\t\tincID: action,\r\n\t\t\tremoveTab: action,\r\n\t\t\taddNewTab: action,\r\n\t\t\trenameCurrentTab: action\r\n\t\t})\r\n\t}\r\n\r\n\tincID = () => {\r\n\t\tthis.id = this.id + 1\r\n\t}\r\n\tswitchTab = tabID => {\r\n\t\tthis.currentTab = tabID\r\n\t\tlet id = this.tabs.map(tab => tab.id).indexOf(this.currentTab)\r\n\t\tlet cQuery = QueriesStore.query[id] && QueriesStore.query[id].query\r\n\t\tlet cVariables = QueriesStore.query[id] && QueriesStore.query[id].variables\r\n\t\tlet cQueryID = QueriesStore.query[id] && QueriesStore.query[id].id\r\n\t\tlet params = {\r\n\t\t\tquery: cQuery || '{}',\r\n\t\t\tvariables: cVariables || '{}'\r\n\t\t}\r\n\t\tQueriesStore.setCurrentQuery( params, cQueryID || null)\r\n\t}\r\n\trenameCurrentTab = name => {\r\n\t\tlet id = this.tabs.map(tab => tab.id).indexOf(this.currentTab)\r\n\t\tthis.tabs[id].name = name\r\n\t}\r\n\taddNewTab = name => {\r\n\t\tthis.incID()\r\n\t\tthis.tabs.push({\r\n\t\t\tname: name,\r\n\t\t\tid: this.id\r\n\t\t})\r\n\t\tthis.switchTab(this.id)\r\n\t}\r\n\tremoveTab = (index, event) => {\r\n\t\tevent.stopPropagation()\r\n\t\tthis.tabs.splice(index, 1)\r\n\t\tthis.tabs.length === 0 \r\n\t\t\t? this.addNewTab('New Tab') \r\n\t\t\t: this.switchTab(this.tabs[this.tabs.length-1].id)\r\n\t}\r\n\r\n}\r\n\r\nexport let TabsStore = new Tabs()\r\nexport let UserStore = new User()\r\nexport let QueriesStore = new Queries()\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport '../App.scss';\r\nimport GraphiQL from 'graphiql'\r\nimport modalStore from '../store/modalStore';\r\nimport { TabsStore, QueriesStore, UserStore } from '../store/queriesStore';\r\nimport copy from 'copy-to-clipboard'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { getIntrospectionQuery, buildClientSchema } from 'graphql';\r\nimport { observer } from 'mobx-react-lite'\r\nimport useDebounce from '../utils/useDebounce'\r\n\r\nexport const CustomGraphiql = observer(() => {\r\n\tconst { toggleSaveQuery, toggleShareQuery } = modalStore\r\n\tconst { tabs, currentTab } = TabsStore\r\n\tconst { user }  = UserStore\r\n\tconst { toggleGallery, setCurrentQuery, query, \r\n\t\t updateQuery, queryParams, logQuery } = QueriesStore\r\n\tconst { addToast } = useToasts()\r\n\tconst graphiql = useRef(null)\r\n\tconst [fetchURL, setFetchURL] = useState({[currentTab]:process.env.REACT_APP_ENDPOINT_URL})\r\n\tconst debouncedURL = useDebounce(fetchURL[currentTab], 500)\r\n\tconst [prettify, setPrettify] = useState(false)\r\n\tconst [schema, setSchema] = useState(null)\r\n\r\n\tconst fetcherFunction = (graphQLParams) => {\r\n\t\treturn fetch(\r\n\t\t\tfetchURL[currentTab],\r\n\t\t\t{\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAccept: 'application/json',\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(graphQLParams),\r\n\t\t\t\tcredentials: 'same-origin',\r\n\t\t\t},\r\n\t\t)\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tif (currentTab in fetchURL) {\r\n\t\t\tfor (let key in fetchURL) {\r\n\t\t\t\tif (tabs.map(tab => tab.id).indexOf(+key)===-1) {\r\n\t\t\t\t\tconst {[key]: deletedKey, ...actual} = fetchURL\r\n\t\t\t\t\tsetFetchURL(actual)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetFetchURL({...fetchURL, [currentTab]: process.env.REACT_APP_ENDPOINT_URL})\r\n\t\t}\r\n\t}, [tabs.length])\r\n\tconst handleInputURLChange = e => {\r\n\t\tsetFetchURL({...fetchURL, [currentTab]: e.target.value})\r\n\t}\r\n\tconst handleCopy = () => {\r\n\t\tconst editor = graphiql.current.getQueryEditor()\r\n\t\tconst query = editor && editor.getValue()\r\n\t\tif (!query) return\r\n\t\tcopy(query)\r\n\t}\r\n\tconst handleClickPrettifyButton = () => {\r\n\t\tsetPrettify(true)\r\n\t\tconst editor = graphiql.current.getQueryEditor()\r\n\t\tconst currentText = editor.getValue()\r\n\t\tconst { parse, print } = require('graphql')\r\n\t\tconst prettyText = print(parse(currentText))\r\n\t\teditor.setValue(prettyText)\r\n\t\tsetPrettify(false)\r\n\t}\r\n\tconst handleQuery = (result, error) => {\r\n\t\t//addQueryLog\r\n\t\tif (queryParams.id) {\r\n\t\t\tlet params = {...queryParams}\r\n\t\t\tif (error) {\r\n\t\t\t\tparams[result] = error\r\n\t\t\t} else {\r\n\t\t\t\tparams[result] = true\r\n\t\t\t} \r\n\t\t\tlogQuery(params)\r\n\t\t}\r\n\t}\r\n\tconst handleSaveQuery = func => {\r\n\t\tif (user) {\r\n\t\t\tfunc()\r\n\t\t} else {\r\n\t\t\taddToast('Login required to save or share queries', {appearance: 'error'})\r\n\t\t}\r\n\t}\r\n\tconst fetcher = async graphQLParams => {\r\n\t\tconst data = await fetcherFunction(graphQLParams)\r\n\t\tdata.clone().json().then(json => {\r\n\t\t\tif ('data' in json) {\r\n\t\t\t\tif (!('__schema' in json.data)) {\r\n\t\t\t\t\thandleQuery('success')\r\n\t\t\t\t}\r\n\t\t\t} else if ('errors' in json) {\r\n\t\t\t\thandleQuery('error', json.errors[0].message) \r\n\t\t\t}\r\n\t\t})\r\n\t\treturn data.json().catch(() => data.text())\r\n\t}\r\n\tconst editQueryHandler = (handleSubject, index) => {\r\n\t\tif (!prettify) {\r\n\t\t\tsetCurrentQuery(handleSubject)\r\n\t\t\tupdateQuery(handleSubject, index)\r\n\t\t}\r\n\t}\r\n\tconst fetchSchema = () => {\r\n\t\tlet introspectionQuery = getIntrospectionQuery()\r\n\t\tlet staticName = 'IntrospectionQuery'\r\n\t\tlet introspectionQueryName = staticName\r\n\t\tlet graphQLParams = {\r\n\t\t\tquery: introspectionQuery,\r\n\t\t\toperationName: introspectionQueryName,\r\n\t\t}\r\n\t\tfetchURL[currentTab].length > 9 && \r\n\t\tfetcherFunction(graphQLParams)\r\n\t\t.then(data => data.json())\t\r\n\t\t.then(result => {\r\n\t\t\tif (typeof result !== 'string' && 'data' in result) {\r\n\t\t\t\tlet schema = buildClientSchema(result.data)\r\n\t\t\t\tsetSchema(schema)\r\n\t\t\t}\r\n\t\t}).catch(e => {})\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tfetchSchema()\r\n\t}, [debouncedURL])\r\n\r\n\treturn (\r\n\t\ttabs.map((tab, i) => (\r\n\t\t\t<div \r\n\t\t\t\tclassName={'graphiql__wrapper ' + (currentTab === tab.id ? 'graphiql__wrapper_active' : '')}\r\n\t\t\t\tkey={i}\r\n\t\t\t>\r\n\t\t\t\t<GraphiQL \r\n\t\t\t\t\tref={graphiql}\r\n\t\t\t\t\tstyle={{ height: '100vh' }}\r\n\t\t\t\t\tquery={query[i].query}\r\n\t\t\t\t\tfetcher={fetcher}\r\n\t\t\t\t\tschema={schema}\r\n\t\t\t\t\tvariables={query[i].variables}\r\n\t\t\t\t\teditorTheme=\"dracula\"\r\n\t\t\t\t\tonEditQuery={query => editQueryHandler({query}, i)}\r\n\t\t\t\t\tonEditVariables={variables => editQueryHandler({variables}, i)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<GraphiQL.Toolbar>\r\n\t\t\t\t\t\t<GraphiQL.Button \r\n\t\t\t\t\t\t\tonClick={handleCopy}\r\n\t\t\t\t\t\t\tlabel=\"Copy\"\r\n\t\t\t\t\t\t\ttitle=\"Copy Query\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<GraphiQL.Button \r\n\t\t\t\t\t\t\tonClick={handleClickPrettifyButton}\r\n\t\t\t\t\t\t\tlabel=\"Prettify\"\r\n\t\t\t\t\t\t\ttitle=\"Prettify Query (Shift-Ctrl-P)\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<GraphiQL.Button \r\n\t\t\t\t\t\t\tonClick={toggleGallery}\r\n\t\t\t\t\t\t\tlabel=\"Gallery\"\r\n\t\t\t\t\t\t\ttitle=\"Gallery Toggle\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<GraphiQL.Button \r\n\t\t\t\t\t\t\tonClick={()=>handleSaveQuery(toggleSaveQuery)}\r\n\t\t\t\t\t\t\tlabel=\"Save\"\r\n\t\t\t\t\t\t\ttitle=\"Save Query\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<GraphiQL.Button \r\n\t\t\t\t\t\t\tonClick={()=>handleSaveQuery(toggleShareQuery)}\r\n\t\t\t\t\t\t\tlabel=\"Share\"\r\n\t\t\t\t\t\t\ttitle=\"Share Query\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input className=\"endpointURL\" type=\"text\" value={fetchURL[currentTab]||''} onChange={handleInputURLChange} />\r\n\t\t\t\t\t</GraphiQL.Toolbar>\r\n\t\t\t\t</GraphiQL>\r\n\t\t\t</div>\r\n\t\t))\r\n\t)\r\n})\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nexport default (value, timeout) => {\r\n    const [state, setState] = useState(value);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => setState(value), timeout);\r\n\r\n        return () => clearTimeout(handler);\r\n    }, [value, timeout]);\r\n\r\n    return state;\r\n}","export const generateLink = () => {\r\n\tlet result           = ''\r\n\tlet characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n\tlet charactersLength = characters.length\r\n\tfor ( let i = 0; i < 10; i++ ) {\r\n\t\tresult += characters.charAt(Math.floor(Math.random() * charactersLength))\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const validEmail = (email) => {\r\n\tlet re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\treturn re.test(email)\r\n}","import React, { useState } from 'react'\r\nimport { signUp } from '../../api/api'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport modalStore from '../../store/modalStore'\r\nimport { validEmail } from '../../utils/common'\r\n\r\nfunction RegisterForm({ active }) {\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst { addToast } = useToasts()\r\n\tconst { toggleLogin, closeHandler } = modalStore\r\n\tconst register = async e => {\r\n\t\te.preventDefault()\r\n\t\tif (password && validEmail(email)) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data } = await signUp(email, password)\r\n\t\t\t\taddToast(data, {appearance: 'success'})\r\n\t\t\t\tcloseHandler()\r\n\t\t\t} catch (e) {\r\n\t\t\t\taddToast(e.response.data, {appearance: 'error'})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<form className={'modal__form '+(!active && 'modal__form_hide')} >\r\n\t\t\t<p className=\"p-modal\">Email</p>\r\n\t\t\t<input type=\"text\" className=\"query__save\" value={email} onChange={e => setEmail(e.target.value)} />  \r\n\t\t\t<p className=\"p-modal\">Password</p>\r\n\t\t\t<input type=\"password\" className=\"query__save\" value={password} onChange={e => setPassword(e.target.value)} />  \r\n\t\t\t<button className=\"button button_filled\" onClick={register}>Sign Up</button>\r\n\t\t\t<button className=\"handler handler__back\" onClick={toggleLogin} />\r\n\t\t\t<button className=\"handler handler__close\" onClick={closeHandler} />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default RegisterForm\r\n","import React, { useState } from 'react'\r\nimport { login } from '../../api/api'\r\nimport { Link } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { UserStore } from '../../store/queriesStore'\r\nimport modalStore from '../../store/modalStore'\r\nimport axios from 'axios'\r\nimport { validEmail } from '../../utils/common'\r\n\r\nfunction LoginForm({ active }) {\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [resend, setResend] = useState(false)\r\n\tconst { getUser } = UserStore\r\n\tconst { toggleRegister, toggleLogin, closeHandler } = modalStore\r\n\tconst { addToast } = useToasts()\r\n\tconst logIn = async e => {\r\n\t\te.preventDefault()\r\n\t\tif (validEmail(email) && password) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data } = await login(email, password)\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\taddToast(data, {appearance: 'success'})\r\n\t\t\t\tgetUser()\r\n\t\t\t\ttoggleRegister()\r\n\t\t\t} catch (e) { \r\n\t\t\t\taddToast(e.response.data, {appearance: 'error'});\r\n\t\t\t\t(e.response.data[0] === 'A') && setResend(true)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst resendActivationLink = async e => {\r\n\t\ttry {\r\n\t\t\tconst { data } = await axios.post('/api/resendactivation', {email})\r\n\t\t\taddToast(data, {appearance: 'success'})\r\n\t\t} catch (error) {\r\n\t\t\taddToast(error.response.data, {appearance: 'error'})\r\n\t\t}\r\n\r\n\t}\r\n\treturn (\r\n\t\t<form onSubmit={e => logIn(e)} className={'modal__form '+(active && 'modal__form_hide')} >\r\n\t\t\t<p className=\"p-modal\">Email</p>\r\n\t\t\t<input type=\"text\" className=\"query__save\" value={email} onChange={e => setEmail(e.target.value)} />  \r\n\t\t\t<p className=\"p-modal\">Password</p>\r\n\t\t\t<input type=\"password\" className=\"query__save\" value={password} onChange={e => setPassword(e.target.value)} />  \r\n\t\t\t<button className=\"button button_filled\"onClick={logIn}>Login</button>\r\n\t\t\t<button className=\"handler handler__close\" onClick={closeHandler} />\r\n\t\t\t{resend &&<a onClick={resendActivationLink}>Check Your email or resend activation link</a>}\r\n\t\t\t<div className=\"flex modal__form__options\">\r\n\t\t\t\t<Link to=\"/reset\" onClick={toggleRegister} >Forgot password?</Link>\r\n\t\t\t\t<a onClick={toggleLogin}>Do not have account? Sign Up</a>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\nimport Modal from 'react-modal'\r\nimport modalStore from '../../store/modalStore'\r\nimport { observer } from 'mobx-react-lite'\r\nimport RegisterForm from './RegisterForm'\r\nimport LoginForm from './LoginForm'\r\n\r\nconst customStyles = {\r\n\toverlay: {\r\n\t\tposition: 'fixed',\r\n\t\tzIndex: 10,\r\n\t\ttop: 0,\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\tbottom: 0,\r\n\t\tbackgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n\t},\r\n\tcontent : {\r\n\t\ttop                   : '50%',\r\n\t\tleft                  : '50%',\r\n\t\tright                 : 'auto',\r\n\t\tbottom                : 'auto',\r\n\t\tmarginRight           : '-50%',\r\n\t\ttransform             : 'translate(-50%, -50%)',\r\n\t\toverflow: 'auto',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tmaxHeight: '450px',\r\n\t\tminWidth: '450px',\r\n\t\twidth: '40%',\r\n\t\tbackgroundColor: '#353848',\r\n\t\tbackgroundClip: 'padding-box',\r\n\t\tborder: '1px solid rgba(0, 0, 0, 0.2)',\r\n\t\tborderRadius: '0.3rem',\r\n\t\toutline: 0,\r\n\t}\r\n}\r\nModal.setAppElement('#graphql_ide')\r\n\r\nconst RegisterWindow = observer(() => {\r\n\tconst { registerIsOpen, loginIsOpen, closeHandler } = modalStore\r\n\r\n    return (\r\n\t\t<Modal\r\n\t\t\tisOpen={registerIsOpen}\r\n\t\t\tonRequestClose={closeHandler}\r\n\t\t\tstyle={customStyles}\r\n\t\t\tcontentLabel=\"Example Modal\"\r\n\t\t>\r\n\t\t\t<LoginForm active={loginIsOpen} />\r\n\t\t\t<RegisterForm active={loginIsOpen} />\r\n\t\t</Modal>\r\n    )\r\n})\r\n\r\nexport default RegisterWindow\r\n","import React, { useState } from 'react'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport modalStore from '../../store/modalStore'\r\nimport {TabsStore, QueriesStore} from '../../store/queriesStore'\r\n\r\nfunction SaveQueryForm() {\r\n\tconst { addToast } = useToasts()\r\n\tconst [name, setName] = useState('')\r\n\tconst [description, setDescription] = useState('')\r\n\tconst { saveQuery, queryParams } = QueriesStore\r\n\tconst { toggleSaveQuery } = modalStore\r\n\tconst { renameCurrentTab } = TabsStore\r\n\r\n\tconst saveHandler = async (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet params = queryParams\r\n\t\tlet data = null\r\n\t\tif (name) {\r\n\t\t\tparams.name = name\r\n\t\t\tif (description) params.description = description\r\n\t\t\tdata = await saveQuery(params)\r\n\t\t\tif (data.status !== 400) {\r\n\t\t\t\trenameCurrentTab(name)\r\n\t\t\t\taddToast(data.msg, {appearance: 'success'})\r\n\t\t\t} else { \r\n\t\t\t\taddToast(data.data.msg, {appearance: 'error'})\r\n\t\t\t}\r\n\t\t\ttoggleSaveQuery()\r\n\t\t} else { addToast('Name is required', {appearance: 'error'}) }\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={saveHandler} className=\"modal modal__form \" >\r\n\t\t\t<p className=\"p-modal\">Query name (required)</p>\r\n\t\t\t<input type=\"text\" className=\"query__save\"  \r\n\t\t\t\tvalue={name} onChange={e => setName(e.target.value)}\r\n\t\t\t/>  \r\n\t\t\t<p className=\"p-modal\">Description (optional)</p>\r\n\t\t\t<input type=\"text\" className=\"query__save\" \r\n\t\t\t\tvalue={description} onChange={e => setDescription(e.target.value)}\r\n\t\t\t/>  \r\n\t\t\t<button type=\"submit\" className=\"button button_filled\" >Save</button>\r\n\t\t\t<button className=\"handler handler__close\" onClick={toggleSaveQuery} />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default SaveQueryForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport modalStore from '../../store/modalStore'\r\nimport {TabsStore, QueriesStore} from '../../store/queriesStore'\r\nimport copy from 'copy-to-clipboard'\r\nimport { generateLink } from '../../utils/common'\r\n\r\nfunction ShareQueryForm() {\r\n\tconst { addToast } = useToasts()\r\n\tconst [name, setName] = useState('')\r\n\tconst [queryLink, setQueryLink] = useState('')\r\n\tconst [description, setDescription] = useState('')\r\n\tconst { saveQuery, queryParams, updateQuery } = QueriesStore\r\n\tconst { toggleShareQuery } = modalStore\r\n\tconst { renameCurrentTab } = TabsStore\r\n\r\n\tuseEffect(() => {\r\n\t\tcopy(`${window.location.protocol}//${window.location.host}/${queryLink}`)\r\n\t}, [queryLink])\r\n\r\n\tconst shareHandler = async (e) => {\r\n\t\te.preventDefault()\r\n\t\tlet params = queryParams\r\n\t\tlet data = null\r\n\t\tif (name) {\r\n\t\t\tparams.name = name\r\n\t\t\tif(description) params.description = description\r\n\t\t\tparams.url = generateLink()\r\n\t\t\tdata = await saveQuery(params)\r\n\t\t\tif (data.status !== 400) {\r\n\t\t\t\tsetQueryLink(params.url)\r\n\t\t\t\trenameCurrentTab(name)\r\n\t\t\t\taddToast(data.msg, {appearance: 'success'})\r\n\t\t\t} else {\r\n\t\t\t\taddToast(data.data.msg, {appearance: 'error'})\r\n\t\t\t}\r\n\t\t\ttoggleShareQuery()\r\n\t\t} else { addToast('Name is required', {appearance: 'error'}) }\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={shareHandler} className=\"modal modal__form\" >\r\n\t\t\t<p className=\"p-modal\">Query name (required)</p>\r\n\t\t\t<input type=\"text\" className=\"query__save\"  \r\n\t\t\t\tvalue={name} onChange={e => setName(e.target.value)}\r\n\t\t\t/>  \r\n\t\t\t<p className=\"p-modal\">Description (optional)</p>\r\n\t\t\t<input type=\"text\" className=\"query__save\" \r\n\t\t\t\tvalue={description} onChange={e => setDescription(e.target.value)}\r\n\t\t\t/>  \r\n\t\t\t<button type=\"submit\" className=\"button button_filled\" >Get Query Link</button>\r\n\t\t\t<button className=\"handler handler__close\" onClick={toggleShareQuery} />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default ShareQueryForm\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport Modal from 'react-modal'\r\nimport modalStore from '../../store/modalStore'\r\nimport SaveQueryForm from './SaveQueryForm'\r\nimport ShareQueryForm from './ShareQueryForm'\r\n\r\nconst customStyles = {\r\n\toverlay: {\r\n\t\tposition: 'fixed',\r\n\t\tzIndex: 10,\r\n\t\ttop: 0,\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\tbottom: 0,\r\n\t\tbackgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n\t},\r\n\tcontent : {\r\n\t\ttop                   : '50%',\r\n\t\tleft                  : '50%',\r\n\t\tright                 : 'auto',\r\n\t\tbottom                : 'auto',\r\n\t\tmarginRight           : '-50%',\r\n\t\ttransform             : 'translate(-50%, -50%)',\r\n\t\toverflow: 'auto',\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tmaxHeight: '450px',\r\n\t\tminWidth: '450px',\r\n\t\twidth: '40%',\r\n\t\tbackgroundColor: '#353848',\r\n\t\tbackgroundClip: 'padding-box',\r\n\t\tborder: '1px solid rgba(0, 0, 0, 0.2)',\r\n\t\tborderRadius: '0.3rem',\r\n\t\toutline: 0,\r\n\t}\r\n}\r\nModal.setAppElement('#graphql_ide')\r\n\r\nconst SaveQueryWindow = observer(() => {\r\n\tconst { saveQueryIsOpen, shareQueryIsOpen, toggleSaveQuery, toggleShareQuery } = modalStore\r\n\r\n    return (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tisOpen={saveQueryIsOpen}\r\n\t\t\t\tonRequestClose={toggleSaveQuery}\r\n\t\t\t\tstyle={customStyles}\r\n\t\t\t\tcontentLabel=\"Example Modal\"\r\n\t\t\t>\r\n\t\t\t\t<SaveQueryForm />\r\n\t\t\t</Modal>\r\n\t\t\t<Modal\r\n\t\t\t\tisOpen={shareQueryIsOpen}\r\n\t\t\t\tonRequestClose={toggleShareQuery}\r\n\t\t\t\tstyle={customStyles}\r\n\t\t\t\tcontentLabel=\"Example Modal\"\r\n\t\t\t>\r\n\t\t\t\t<ShareQueryForm />\r\n\t\t\t</Modal>\r\n\t\t</>\r\n    )\r\n})\r\n\r\nexport default SaveQueryWindow\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getQuery } from '../api/api'\r\nimport {TabsStore, QueriesStore} from '../store/queriesStore'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport copy from 'copy-to-clipboard'\r\n\r\nconst TabsComponent = observer(() => {\r\n\tconst { tabs, currentTab, switchTab, removeTab, addNewTab } = TabsStore\r\n\tconst { queryurl } = useParams()\r\n\tconst { setCurrentQuery ,setQuery, removeQuery, query } = QueriesStore\r\n\tconst { addToast } = useToasts()\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function updateTabs() {\r\n\t\t\tif (queryurl) {\r\n\t\t\t\tconst { data } = await getQuery(queryurl)\r\n\t\t\t\tconst params = {\r\n\t\t\t\t\tquery: data.query,\r\n\t\t\t\t\tvariables: data.arguments,\r\n\t\t\t\t\turl: data.url\r\n\t\t\t\t}\r\n\t\t\t\tsetQuery(params, data.id)\r\n\t\t\t\taddNewTab(data.name)\r\n\t\t\t}\r\n\t\t}\r\n\t\tupdateTabs()\r\n\t}, [])\r\n\tconst addNewTabHandler = () => {\r\n\t\taddNewTab('New Tab')\r\n\t\tsetQuery({query: '{}', variables: '{}'})\r\n\t\tsetCurrentQuery({query: '{}', variables: '{}'})\r\n\t}\r\n\tconst removeTabHandler = (index, event) => {\r\n\t\tremoveQuery(index)\r\n\t\tremoveTab(index, event)\r\n\t}\r\n\tconst getQueryUrl = (index, e) => {\r\n\t\te.preventDefault()\r\n\t \tif (query[index].url) {\r\n\t\t\tcopy(`http://${window.location.host}/${query[index].url}`)\r\n\t\t\taddToast('Query link copied to clipboard!', {appearance: 'success'})\r\n\t\t} else {\r\n\t\t\taddToast('This query is not shared now', {appearance: 'error'})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"tabs\">\r\n\t\t\t<ul>\r\n\t\t\t\t{\r\n\t\t\t\t\ttabs.map((tab, i) => (\r\n\t\t\t\t\t\t<li \r\n\t\t\t\t\t\t\tclassName={(currentTab === tab.id ? 'active' : '')} key={i}\r\n\t\t\t\t\t\t\tonClick={() => switchTab(tab.id)}\r\n\t\t\t\t\t\t\tonContextMenu={e => getQueryUrl(i, e)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{ tab.name }\r\n\t\t\t\t\t\t\t<span \r\n\t\t\t\t\t\t\t\tclassName=\"tab__close\"\r\n\t\t\t\t\t\t\t\tonClick={(e) => removeTabHandler(i, e)}\r\n\t\t\t\t\t\t\t/> \r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t\t<li \r\n\t\t\t\t\tclassName=\"tabs__add\"\r\n\t\t\t\t\tonClick={addNewTabHandler}\r\n\t\t\t\t><span className=\"tab__add\" /></li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default TabsComponent\r\n","import React, { useEffect, useState } from 'react'\r\nimport { logout } from '../api/api'\r\nimport { observer } from 'mobx-react-lite'\r\nimport ModalStore from '../store/modalStore'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserStore } from '../store/queriesStore'\r\nimport ClickOutside  from 'react-click-outside';\r\n\r\nconst Profile = observer(() => {\r\n\tconst { getUser, user, setUser } = UserStore\r\n\tconst { toggleRegister } = ModalStore\r\n\tconst [showProfileMenu, setShowProfileMenu] = useState(false)\r\n\tconst toggleProfileMenu = () => user && setShowProfileMenu(prev => !prev)\r\n\tconst clickOutside = e => {\r\n\t\te.target.classList.value !== 'profile__image' && setShowProfileMenu(false)\r\n\t}\r\n\r\n\tconst logOut = async () => {\r\n\t\tawait logout().catch(e => console.log(e))\r\n\t\tsetUser(null)\r\n\t\tsetShowProfileMenu(prev => !prev)\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tgetUser()\r\n\t}, [])\r\n\r\n\tif (!user) return (\r\n\t\t<button className=\"button button__signin\"\r\n\t\t\tonClick={toggleRegister}\r\n\t\t> Login </button>\r\n\t)\r\n\treturn (\r\n\t\t<div className=\"profile flex\">\r\n\t\t\t<img src='https://cdn.jsdelivr.net/gh/Spendil/qqq@1.0/media/user.f49489c9.svg' className=\"profile__image\" alt=\"Profile\" onClick={toggleProfileMenu} />\r\n\t\t\t<p className=\"profile__email\"> {user.email} </p>\r\n\t\t\t<ClickOutside\r\n\t\t\t\tonClickOutside={clickOutside}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={'profile__controls flex flex-col ' + (showProfileMenu && 'active')}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<button className=\"profile__button\">\r\n\t\t\t\t\t\t<Link to=\"/changepwd\" >Change password</Link>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"profile__button\" onClick={logOut} >Logout</button>\r\n\t\t\t\t</div>\r\n\t\t\t</ClickOutside>\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport TabsComponent from './TabsComponent'\r\nimport ProfileComponent from './ProfileComponent'\r\n\r\nfunction ControlPanel() {\r\n\treturn (\r\n\t\t<div className=\"controlpanel\">\r\n\t\t\t<TabsComponent />\r\n\t\t\t<ProfileComponent />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ControlPanel\r\n","import axios from 'axios'\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport logo from '../assets/images/bitquery_logo.png'\r\n\r\nfunction ChangePassword() {\r\n\tconst style = {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center'\r\n\t}\r\n\tconst { addToast } = useToasts()\r\n\tconst [oldPwd, setOldPwd] = useState('')\r\n\tconst [newPwd, setNewPwd] = useState('')\r\n\tconst [confirmNewPwd, setConfirmNewPwd] = useState('')\r\n\tlet history = useHistory()\r\n\t\r\n\tconst changePwd = async (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (newPwd === confirmNewPwd && oldPwd && newPwd) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data } = await axios.post('/api/changepassword', {\r\n\t\t\t\t\toldPwd,\r\n\t\t\t\t\tnewPwd\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(data)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\thistory.push('/')\r\n\t\t\t\t}, 3000)\r\n\t\t\t\taddToast(data, { appearance: 'success' })\r\n\t\t\t\taddToast('Redirect in 3 seconds...', { appearance: 'success' })\r\n\t\t\t} catch (error) {\r\n\t\t\t\taddToast(error.response.data, { appearance: 'error' })\r\n\t\t\t}\r\n\t\t} else if (newPwd !== confirmNewPwd) {\r\n\t\t\taddToast('Passwords do not match!', { appearance: 'error' })\r\n\t\t} else {\r\n\t\t\taddToast('Fill all fields', { appearance: 'error' })\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"reset__password\">\r\n\t\t\t<form style={style} onSubmit={changePwd} className=\"reset__form\" >\r\n\t\t\t\t<h2>Here you can change password</h2>\r\n\t\t\t\t<p className=\"p-modal\">Old Password</p>\r\n\t\t\t\t<input type=\"password\" className=\"query__save\" value={oldPwd} onChange={e => setOldPwd(e.target.value)} />  \r\n\t\t\t\t<p className=\"p-modal\">New Password</p>\r\n\t\t\t\t<input type=\"password\" className=\"query__save\" value={newPwd} onChange={e => setNewPwd(e.target.value)} />  \r\n\t\t\t\t<p className=\"p-modal\">Confirm Password</p>\r\n\t\t\t\t<input type=\"password\" className=\"query__save\" value={confirmNewPwd} onChange={e => setConfirmNewPwd(e.target.value)} />  \r\n\t\t\t\t<button className=\"button button_filled\" type=\"submit\">Apply</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ChangePassword\r\n","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport axios from 'axios'\r\n\r\nfunction ResetPasswordForm() {\r\n\tconst style = {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center'\r\n\t}\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [confirmPassword, setConfirmPassword] = useState('')\r\n\tlet { token } = useParams()\r\n\tconst { addToast } = useToasts()\r\n\tconst resetPassword = async e => {\r\n\t\te.preventDefault()\r\n\t\tif (password === confirmPassword) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data } = await axios.post('/api/reset', {\r\n\t\t\t\t\tpassword,\r\n\t\t\t\t\ttoken\r\n\t\t\t\t})\r\n\t\t\t\taddToast(data, {appearance: 'success'})\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e.response.data)\r\n\t\t\t\taddToast(e.response.data, {appearance: 'error'})\r\n\t\t\t}\r\n\t\t} else { \r\n\t\t\taddToast('Passwords do not match!', {appearance: 'error'})\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<form style={style} onSubmit={resetPassword} className=\"reset__form\" >\r\n\t\t\t<h1>Confirm new password</h1>\r\n\t\t\t<p className=\"p-modal\">New password</p>\r\n\t\t\t<input type=\"password\" className=\"query__save\" \r\n\t\t\t\tvalue={password} onChange={e => setPassword(e.target.value)} \r\n\t\t\t/>  \r\n\t\t\t<p className=\"p-modal\">Confirm password</p>\r\n\t\t\t<input type=\"password\" className=\"query__save\" \r\n\t\t\t\tvalue={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} \r\n\t\t\t/>  \r\n\t\t\t<button className=\"button button_filled\" type=\"submit\">Change password</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default ResetPasswordForm\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Route, Switch, useHistory, useRouteMatch } from 'react-router-dom'\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport ResetPasswordForm from '../components/ResetPasswordForm'\r\nimport logo from '../assets/images/bitquery_logo.png'\r\nimport { validEmail } from '../utils/common'\r\n\r\nfunction ResetPassword() {\r\n\tconst [email, setEmail] = useState('')\r\n\tlet match = useRouteMatch()\r\n\tconst { addToast } = useToasts()\r\n\tlet history = useHistory()\r\n\tconst style = {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center'\r\n\t}\r\n\tconst sendPasswordResetLink = async e => {\r\n\t\te.preventDefault()\r\n\t\tif (validEmail(email)) {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data } = await axios.post('/api/forgot', { email })\r\n\t\t\t\taddToast(data, { appearance: 'success' })\r\n\t\t\t} catch (e) {\r\n\t\t\t\taddToast(e.response.data, { appearance: 'error' })\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<div className=\"reset\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path={`${match.path}/:token`} >\r\n\t\t\t\t\t<ResetPasswordForm />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path={`${match.path}`} >\r\n\t\t\t\t\t<form style={style} onSubmit={sendPasswordResetLink} className=\"reset__form\" >\r\n\t\t\t\t\t\t<h2>Forgot password</h2>\r\n\t\t\t\t\t\t<p>Enter your email below and reset password instruction will be sent </p>\r\n\t\t\t\t\t\t<p className=\"p-modal\">Email</p>\r\n\t\t\t\t\t\t<input type=\"text\" className=\"query__save\" value={email} onChange={e => setEmail(e.target.value)} />  \r\n\t\t\t\t\t\t<button className=\"button button_filled\" type=\"submit\">GO</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ResetPassword\r\n","import React, { useState } from 'react'\r\nimport {TabsStore, QueriesStore} from '../store/queriesStore'\r\n\r\nfunction QueriesComponent ({ queries }) {\r\n\tconst [hoverElementIndex, setHoverElementIndex] = useState(false)\r\n\tconst { addNewTab } = TabsStore\r\n\tconst { setQuery, setCurrentQuery } = QueriesStore\r\n\tconst showDescription = (i1, i2) => i1===i2 ? true : false\r\n\tconst handleClick = (query) => {\r\n\t\tconst params = {\r\n\t\t\tquery: query.query,\r\n\t\t\tvariables: query.arguments,\r\n\t\t\turl: query.url\r\n\t\t}\r\n\t\tsetQuery(params, query.id)\r\n\t\tsetCurrentQuery(params, query.id)\r\n\t\taddNewTab(query.name)\r\n\t}\r\n\r\n\treturn (\r\n\t\tqueries.map((query, index) => (\r\n\t\t\t<li className=\"gallery__query\" key={index} > \r\n\t\t\t\t<p  className=\"gallery__query__body\"\r\n\t\t\t\t\tonMouseEnter={() => setHoverElementIndex(index)}\r\n\t\t\t\t\tonMouseLeave={() => setHoverElementIndex(-1)}\r\n\t\t\t\t\tonClick={() => handleClick(query)}\r\n\t\t\t\t> \r\n\t\t\t\t\t{query.name} \r\n\t\t\t\t</p>\r\n\t\t\t\t{ \r\n\t\t\t\t\tshowDescription(hoverElementIndex, index) && \r\n\t\t\t\t\t\t<label className=\"gallery__query__description\" > \r\n\t\t\t\t\t\t\t{query.description} \r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t}\r\n\t\t\t</li>\r\n\t\t))\r\n\t)\r\n}\r\n\r\nexport default QueriesComponent\r\n","import axios from 'axios'\r\nimport { observer } from 'mobx-react-lite'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { UserStore, QueriesStore } from '../store/queriesStore'\r\nimport QueriesComponent from './QueriesComponent'\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\nconst GalleryComponent = observer(() => {\r\n\tconst [allQueries, setAllQueries] = useState([])\r\n\tconst [myQueries, setMyQueries] = useState([])\r\n\tconst [showAllQueries, toggleQueries] = useState(true)\r\n\tconst { showGallery, toggleGallery, queryJustSaved } = QueriesStore\r\n\tconst { user } = UserStore\r\n\tconst { addToast } = useToasts()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getQueries = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst { data } = await axios.get('/api/getqueries')\r\n\t\t\t\tsetAllQueries(data.queries)\r\n\t\t\t\tdata.msg && addToast('Account activated!', {appearance: 'success'})\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t}\r\n\t\t}\r\n\t\tgetQueries()\r\n\t}, [queryJustSaved])\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\tconst getMyQueries = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { data } = await axios.get('/api/getmyqueries')\r\n\t\t\t\t\tsetMyQueries(data)\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.log(e)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgetMyQueries()\r\n\t\t}\r\n\t}, [user, queryJustSaved])\r\n\r\n\treturn (\r\n\t\t<div className={'gallery flex flex-col ' + (showGallery && 'active')}>\r\n\t\t\t<div className=\"gallery__header flex flex-col\">\r\n\t\t\t\t<span className=\"close\" onClick={toggleGallery} /> \r\n\t\t\t\t<p>Gallery</p>\r\n\t\t\t\t{ user && \r\n\t\t\t\t\t<div className=\"gallery__switch\">\r\n\t\t\t\t\t\t<input type=\"checkbox\" id=\"switch\" onChange={() => toggleQueries(!showAllQueries)} />\r\n\t\t\t\t\t\t<label htmlFor=\"switch\" className=\"flex gallery__switch__label\">\r\n\t\t\t\t\t\t\t<span className=\"myqueries\">My queries</span>\r\n\t\t\t\t\t\t\t<span className=\"allqueries\">Published</span>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<ul className=\"gallery__queries\">\r\n\t\t\t\t{\r\n\t\t\t\t\tuser ?\r\n\t\t\t\t\t\tshowAllQueries \r\n\t\t\t\t\t\t\t? <QueriesComponent queries={allQueries} />\r\n\t\t\t\t\t\t\t: <QueriesComponent queries={myQueries} />\r\n\t\t\t\t\t: <QueriesComponent queries={allQueries} />\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default GalleryComponent\r\n","import React from 'react'\r\nimport './App.scss'\r\nimport { CustomGraphiql } from './components/CustomGraphiql'\r\nimport RegisterWindow from './components/modal/RegisterWindow'\r\nimport SaveQueryWindow from './components/modal/SaveQueryWindow'\r\nimport ControlPanel from './components/ControlPanel'\r\nimport PasswordReset from './pages/ChangePassword'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport ResetPassword from './pages/ResetPassword'\r\nimport GalleryComponent from './components/GalleryComponent'\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<RegisterWindow />\r\n\t\t\t\t<SaveQueryWindow />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/reset\" >\r\n\t\t\t\t\t\t<ResetPassword />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/changepwd\" >\r\n\t\t\t\t\t\t<PasswordReset />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path={['/:queryurl', '/']} >\r\n\t\t\t\t\t\t<ControlPanel />\r\n\t\t\t\t\t\t<div className=\"content flex\">\r\n\t\t\t\t\t\t\t<GalleryComponent />\r\n\t\t\t\t\t\t\t<CustomGraphiql />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</BrowserRouter>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport 'graphiql/graphiql.css'\r\nimport { ToastProvider } from 'react-toast-notifications'\r\nimport axios from 'axios'\r\nif (process.env.NODE_ENV==='production') {\r\n\tlet url = document.getElementById('graphql_ide').getAttribute('baseurl')\r\n\taxios.defaults.baseURL = url\r\n}\r\n\r\nReactDOM.render(\r\n\t<ToastProvider autoDismiss={true} >\r\n\t\t<App/>\r\n\t</ToastProvider>,\r\n\tdocument.getElementById('graphql_ide')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}